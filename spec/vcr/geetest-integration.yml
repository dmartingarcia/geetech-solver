---
http_interactions:
- request:
    method: get
    uri: https://www.infojobs.net/distil_r_captcha.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Typhoeus - https://github.com/typhoeus/typhoeus
      Expect:
      - ''
  response:
    status:
      code: 405
      message: Not Allowed
    headers:
      Content-Type:
      - text/html;charset=windows-1252
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cache-Control:
      - private, no-cache, no-store, must-revalidate
      Content-Language:
      - es,es-es
      Date:
      - Sat, 22 Sep 2018 16:38:00 GMT
      Edge-Control:
      - no-store, bypass-cache
      Expires:
      - Thu, 01 Jan 1970 00:00:01 GMT
      P3p:
      - CP="CAO PSA OUR"
      Server:
      - nginx
      Surrogate-Control:
      - no-store, bypass-cache
      Vary:
      - Accept-Encoding
      - Accept-Encoding,User-Agent
      X-Ocl:
      - o00
      - o00
      X-Pcl:
      - p00
      - p00
      X-Cache:
      - Error from cloudfront
      Via:
      - 1.1 9b51ea0192df87ecb2185cd2247e4a1b.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - LrUkdn7LU1e1VZnFef9X4zNQrQh6gVOjihsGuZQQ9l8UiHdiYl1veQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sat, 22 Sep 2018 16:38:00 GMT
- request:
    method: post
    uri: https://www.infojobs.net/distil_r_captcha_challenge
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Typhoeus - https://github.com/typhoeus/typhoeus
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/plain
      Content-Length:
      - '37'
      Connection:
      - keep-alive
      Cache-Control:
      - private, no-cache, no-store, must-revalidate
      Date:
      - Sat, 22 Sep 2018 16:38:01 GMT
      Edge-Control:
      - no-store, bypass-cache
      Expires:
      - Thu, 01 Jan 1970 00:00:01 GMT
      Server:
      - nginx
      Surrogate-Control:
      - no-store, bypass-cache
      Vary:
      - Accept-Encoding
      X-Ocl:
      - o00
      X-Pcl:
      - p00
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 9b51ea0192df87ecb2185cd2247e4a1b.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - ImwP6DUBW0jABUQyVSVwFFZjFb44FsRAnhrjw2XHfWitAXG5oxC2lg==
    body:
      encoding: UTF-8
      string: '6e060f1792480e6d90666e36924bd79f;en;

'
    http_version: 
  recorded_at: Sat, 22 Sep 2018 16:38:01 GMT
- request:
    method: get
    uri: https://api-na.geetest.com/get.php?callback=geetest_1537634281526&challenge=6e060f1792480e6d90666e36924bd79f&gt=f2ae6cadcf7886856696502e1d55e00c&lang=en&pt=0&w=hkUqrXXz3NpyF7inKZlkO4jHEcq2HGb5(p5RZRM2YnXkNbJ9kTOMJIpTGH9F38SAiP91nFqvLqB0DtXNkj1tl58Te(3M9eIVtwN6ANDUHP)x0vWUQRV7oFpBuIhjOZRHJBrXjrjF8POmegQP585hZXtQZuUA3mKdaOGoAvxLgBSpOj4(2CQAUodO5Pn6JDYgpdMt1mnBtAdVQqSjt5TT6ZAl6TARCvVagOb4XRKwzE4DdN7qBzUbVZi1KqGOqjGlNGAsFwD(2XHUmEwCqMJtCfx0B)dXn35Hkm(i9cn4efhBjViPSSU3pGrc1f7pYbdmAagmeE6l9Y)KzBxg(CGtAa(2Ddq2Lm4A(CecXxD2QvhbuQ(fIu(PUf1SiGGumAEZvBhtlu2hL8plqDTewK33jCDP6TetXoxH8Czt9tyP4jsDhUxQDpjgH71kxc7jtPCmQWtQfyYeCmqJQ9x0wI5RzY0ny7u6vLHiWzzF231HvtbfARb3BxOVXB(KzRzwpSbw0kntMYSe(UfPmnJq5OeChof4u6vsSWsXG98ISPYhRRz16JMzTtdCZXshgOaxMqua(c22dZYxtiUOhteitLQeWs5D983ci4d4kLNXCPONO0WftqdRxMsIpRcFdTeZDaPs8RNlw(6Qz9cSjsTyTVyR)uzBH)QnGALTYWC7CDwM5BkW4KY)ey0uXmebGa94xYN4jgmEbBrHxtybH(uVZpovcXyyHSO3He0vXRHvUNOFCRnG5(FTFnh)pMR(e7I0ip80WhHhb1YRGRTiA39nNgNFmwO7uZWvIWa1LdpgoUZqN(T1K3EvQb6WDkxGsp0hIzJMRpWnxC8TPrQCPGdM0z2BX6ytRF5(824XvdAOdO31zAcXPZK8lmEc8NWm77Mx9ZBvXiPnlRS2Ty5qWOyxmpUS7LZWnUjy6cH4O)g5M5UARPRb8G()0aeUwnYDlDS94FOTQduiIe5Tu9092ucAdH9k5FgEgOop4wrEmwMolENcVnZCkMTL3BIqjKwq(IUDDPu)9ee24e8c0037c86e807d2e151a8ed87495065f97bb7bd44ae11e7efea285bffd2a8677139d635288e0ca7cd0422f81866c41aad69e7ffb607f5a3c39cdc7b250745c902af437cb4886d2847d6c42294e31900fd753b93ff9d95df1f3f848711c8070fc5fcd52c5cad38d967928e1527ad1883ff5f0b01904cea8987bf317b877
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.75
        Safari/537.36
      Referer:
      - https://www.infojobs.net/distil_r_captcha.html
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - openresty
      Date:
      - Sat, 22 Sep 2018 16:38:02 GMT
      Content-Type:
      - text/javascript;charset=UTF-8
      Content-Length:
      - '839'
      Connection:
      - keep-alive
      Etag:
      - '"61a062d2180480c07cabecee5ee4ef60fd8081f6"'
      Cache-Control:
      - no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Set-Cookie:
      - GeeTestUser=d40c518dc9f33ae36a2991b293bda9ed; expires=Sun, 22 Sep 2019 16:38:02
        GMT; Path=/
      Expires:
      - '0'
    body:
      encoding: UTF-8
      string: 'geetest_1537634281526({"status": "success", "data": {"theme_version":
        "1.5.0", "logo": true, "c": [12, 58, 98, 36, 43, 95, 62, 15, 12], "static_servers":
        ["static.geetest.com", "dn-staticdown.qbox.me"], "theme": "wind", "i18n_labels":
        {"goto_cancel": "Cancel", "reset": "Retry", "error": "Error", "error_title":
        "Timed out", "ready": "Click to verify", "next_ready": "Incomplete", "error_content":
        "Retry", "goto_homepage": "Go to the official Geetest website?", "refresh_page":
        "Something went wrong. Refresh this page to continue verifying.", "next":
        "Loading", "copyright": "Powered by Geetest", "success": "You passed", "success_title":
        "You passed", "fullpage": "Verifying", "goto_confirm": "OK", "loading_content":
        "Verifying"}, "api_server": "api-na.geetest.com", "feedback": "http://www.geetest.com/helpcenter/",
        "s": "564c6437"}})'
    http_version: 
  recorded_at: Sat, 22 Sep 2018 16:38:02 GMT
- request:
    method: get
    uri: https://api-na.geetest.com/get.php?api_server=api-na.geetest.com&callback=geetest_1537634281526&challenge=6e060f1792480e6d90666e36924bd79f&gt=f2ae6cadcf7886856696502e1d55e00c&https=false&is_next=true&lang=en&offline=false&product=embed&protocol=https://&type=slide3&width=100%25
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.75
        Safari/537.36
      Referer:
      - https://www.infojobs.net/distil_r_captcha.html
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - openresty
      Date:
      - Sat, 22 Sep 2018 16:38:04 GMT
      Content-Type:
      - text/javascript;charset=UTF-8
      Content-Length:
      - '117'
      Connection:
      - keep-alive
      Etag:
      - '"8cf7eb7cdd72e9596075dd69b89141bf930fe2ce"'
      Cache-Control:
      - no-cache, no-store, must-revalidate
      Expires:
      - '0'
      Pragma:
      - no-cache
      Set-Cookie:
      - GeeTestUser=1f21e905fa7c3a9ed82b5b9808ed6246; expires=Sun, 22 Sep 2019 16:38:04
        GMT; Path=/
    body:
      encoding: UTF-8
      string: 'geetest_1537634281526({"user_error": "Error", "status": "error", "error":
        "old challenge", "error_code": "error_02"})'
    http_version: 
  recorded_at: Sat, 22 Sep 2018 16:38:04 GMT
recorded_with: VCR 4.0.0
